//39冒泡排序例子
#include <stdio.h>
//void bubble_sort(int arr[], int len) {
//    int i, j, temp;
//    for (i = 0; i < len - 1; i++)
//        for (j = 0; j < len - 1 - i; j++)
//            if (arr[j] > arr[j + 1]) {
//                temp = arr[j];
//                arr[j] = arr[j + 1];
//                arr[j + 1] = temp;
//            }
//}
//int main() {
//    int arr[] = { 22, 34, 3, 32, 82, 55, 89, 50, 37, 5, 64, 35, 9, 70 };
//    int len = (int) sizeof(arr) / sizeof(*arr);
//    bubble_sort(arr, len);
//    int i;
//    for (i = 0; i < len; i++)
//        printf("%d ", arr[i]);
//    return 0;
//}

//53 冒泡排序
#include <stdio.h>
//#define N 10
//int bubblesort(int a[], int n);
//
//int main()
//{
//    int a[N];
//    int i;
//    printf("Input 10 numbers:\n");
//    for(i = 0; i < N; i++)
//    {
//        scanf("%d", &a[i]);
//    }
//    bubblesort(a, N);
//    for(i = 0; i < N; i++)
//    {
//        printf("%d ", a[i]);
//    }
//    return 0;
//}
//int bubblesort(int a[], int n)
//{
//    int i, j, temp;
//    for(i = 0; i < n - 1; i++)
//    {
//        for(j = 0; j < n - 1 - i; j++)
//        {
//            if(a[j] > a[j + 1])
//            {
//                temp = a[j];//temp的位置在第二层循环中，而插入是在第一层中
//                a[j] = a[j + 1];
//                a[j + 1] = temp;
//            }
//        }
//    }
//}