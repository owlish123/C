////45比赛现场统分***************引用同一个函数，一个能出结果一个不能
#include <stdio.h>
//#define N 10
//int main()
//{
//    int numbercode[N];//选手编号
//    float score[N][N];//每个评委给每个选手的得分
//    int judge[N];//评委编号
//    float argscore[N];//最后得分集合
//    int n, m, i, j;
//    printf("How many athletes?");
//    scanf("%d", &n);
//    printf("How many judges?");
//    scanf("%d", &m);
//
//    printf("Scores of athletes:");
//    printf("\n\n\n");
//    for(i = 0; i < n; i++)
//    {
//        printf("Athlete %d is playing.", i + 1);
//        printf("\nPlease enter his number code:");
//        scanf("%d", &numbercode[i]);
//        for(j = 0; j < m; j++)
//        {
//            judge[j] = j + 1;
//            printf("Judge %d gives score:", judge[j]);
//            scanf("%f", &score[i][j]);
//        }
//        sort(score[i], m);
//        printf("\nDelete a maximum score:%.1f", score[i][m - 1]);
//        printf("\nDelete a minium score:%.1f", score[i][0]);
//        float sum = 0;
//        int k;
//        for(k = 1; k < m -1; k++)
//        {
//            sum += score[i][k];
//        }
//        argscore[i] = (sum) / (float) (m - 2);
//        printf("\nThe final score of Athlete %d is %.3f", numbercode[i], argscore[i]);
//        printf("\n\n\n");
//    }
//    float criteria[N];
//    float temp;
//    for(j = 0; j < m; j++)
//    {
//        temp = 0;
//        for(i = 0; i < n; i++)
//        {
//            temp = (score[j][i] - argscore[i]) * (score[j][i] - argscore[i]);
//        }
//        criteria[j] = temp;
//    }
//    sort1(argscore, numbercode, n);
//    printf("Order of Athletes:\n");
//    printf("order\tfinalscore\tnumbercode\n");
//    for(i = 0; i < n; i++)
//    {
//        printf("%5d\t%.3f\t%6d\n", i + 1, argscore[i], numbercode[i]);
//    }
//    sort1(criteria, judge, m);
//    printf("Order of judges:\n");
//    printf("order\t finalscore\tnumbercode\n");
//    for(j = 0; j < m; j++)
//    {
//        printf("%5d\t%.3f\t%6d\n", j + 1, criteria[j], judge[j]);
//    }
//
//    return 0;
//}
//
//int sort(float a[], int n)
//{
//    int i ,j;
//    float temp;
//    for(i = 1; i < n; i++)
//    {
//        temp = a[i];
//        for(j = i; j > 0; j--)
//        {
//            if(a[j - 1] > a[j])
//            {
//                a[j] = a[j -1];
//                a[j -1] = temp;
//            }
//        }
//    }
//}
//
//
//
//void sort1(float a[], int b[], int n)
//{
//    int i, j;
//    float temp;
//    int temp1;
//    for(i = 1; i < n; i++)
//    {
//        temp = a[i];
//        temp1 = b[i];
//        for(j = i; j > 0; j--)
//        {
//            if(a[j - 1] > a[j])
//            {
//                a[j] = a[j - 1];
//                a[j -1] = temp;
//
//                b[j] = b[j -1];
//                b[j -1] = temp1;
//            }
//        }
//    }
//}
//5
//5
//11
//9.5
//9.6
//9.7
//9.4
//9.0
//12
//9.0
//9.2
//9.1
//9.3
//8.9
//13
//9.6
//9.7
//9.5
//9.8
//9.4
//14
//8.9
//8.8
//8.7
//9.0
//8.6
//15
//9.0
//9.1
//8.8
//8.9
//9.2