#include <stdio.h>
//1求和（两头往中间走的循环）
int main(){
    int i, j, sum;
    i = 1, j = 99, sum = 0;
    for(; i < j; i++, j--){
        sum = sum + i + j;
        printf("%d %d %d\n", i, j, sum);
    }
    if (i == j){
        sum += i;
        printf("%d %d %d\n", i, j, sum);
    }

    return 0;

//11计算1——101的奇数和
#include <stdio.h>
//int main()
//{
//    int i = 1, sum = 0;
//    for(;i <= 101; i += 2)
//    {
//        sum += i;
//        printf("i = %d, sum = %d\n", i, sum);
//    }
//    return 0;
//}

//14 2的64次方累加和
//#include<math.h>
#include <stdio.h>
//int main()
//{
//    double i, item, volume, sum = 0;
//    for(i = 0; i <= 64; i++)
//    {
//        item = pow(2.0, i);
//        printf("%lf\n", item);
//        sum += item;
//    }
//    volume = sum / 142000000;
//    printf("sum = %lf, volume = %lf", sum, volume);
//    return 0;
//}
//int main() {
//    long long i=0, ans = 0, step = 1;
//    for (; i<64; i++) {
//        printf("%lld\n", step);
//        ans += step;
//        step <<= 1;
//    }
//    printf("%lld\n", ans);
//    return 0;
//}



//26阶乘求和
#include <stdio.h>
//int fact(unsigned int n)
//{
//    if(n <= 0)
//        return 1;
//    return n * fact(n - 1);
//
//}
// int main()
// {
//     int i = 1, sum = 0, item = 0, n = 0;
//     printf("Input n:\n");
//     scanf("%u", &n);
//     for(i = 1; i <= n; i++)
//     {
//         item = fact(i);
//         printf("%u! = %d\n", i, item);
//         sum += item;
//     }
//     printf("%u的阶乘和为：%d", n, sum);
//     return 0;
// }
//int main() {
//    int i=1, ans = 0, n=10, step = 1;
//    for (; i <= n; i++, step *= i)
//        ans += step;
//    printf("%d\n", ans);
//}